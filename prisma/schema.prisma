// Prisma schema for Sema platform (Chat + Roleplay AI system)

generator client {
  provider        = "prisma-client-js"
  output          = "../node_modules/.prisma/client"
  // Uncomment the next line to enable Prisma Data Proxy support:
  // previewFeatures = ["dataProxy"]
}

datasource db {
  provider         = "postgresql"
  url              = env("DATABASE_URL")
}

model User {
  id              Int           @id @default(autoincrement())
  email           String        @unique
  password        String
  name            String?
  createdAt       DateTime      @default(now())
  
  // ðŸ”¥ Session Management Fields (NEW)
  activeTokenId   String?       @unique  // Current active session token ID
  lastActive      DateTime?               // Last activity timestamp
  deviceInfo      String?                 // Device/browser information
  
  // Relations
  chats           Chat[]
  events          Event[]
  resetTokens     ResetToken[]
}

model Chat {
  id           Int       @id @default(autoincrement())
  title        String    @default("\"")
  ownerId      Int
  createdAt    DateTime  @default(now())
  scenarioKey  String?                // Only for scenario-based chats
  feature      String    @default("chat") // e.g. 'chat', 'sema', 'tusome'

  // Relations
  owner        User      @relation(fields: [ownerId], references: [id])
  messages     Message[]
}

model Message {
  id        Int      @id @default(autoincrement())
  chatId    Int
  role      String                // 'user' | 'assistant' | 'system'
  text      String
  timestamp DateTime @default(now())

  // Relations
  chat      Chat     @relation(fields: [chatId], references: [id])
}

model Event {
  id          Int      @id @default(autoincrement())
  userId      Int
  type        String                // e.g. CHAT_CREATED, CHAT_DELETED
  description String?
  createdAt   DateTime  @default(now())

  // Relations
  user        User     @relation(fields: [userId], references: [id])
}

model ResetToken {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  userId     Int
  expiresAt  DateTime

  // Relations
  user       User     @relation(fields: [userId], references: [id])
}